name: Build and deploy Python app to Azure Web App - mytestapp

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Avoid overlapping deploys to the same app (prevents SCM restart conflicts)
concurrency:
  group: mytestapp-prod
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      # (Optional) only if you run tests; not required for deployment itself
      - name: Set up Python (for tests)
        if: false
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # If you want tests, enable this and point to the folder:
      # - run: |
      #     python -m pip install -r azure-python-webapp-hello-3.13/requirements.txt
      #     pytest -q

      # Upload only the app folder as the artifact
      - name: Upload artifact (app only)
        uses: actions/upload-artifact@v4
        with:
          name: drop
          path: azure-python-webapp-hello-3.13

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: drop
          path: site

      - name: Sanity check package structure
        run: |
          ls -la site
          # If your artifact unpacked into a nested folder, flatten it:
          if [ -d "site/azure-python-webapp-hello-3.13" ]; then
            shopt -s dotglob
            mv site/azure-python-webapp-hello-3.13/* site/
            rmdir site/azure-python-webapp-hello-3.13
          fi
          ls -la site
          test -f site/requirements.txt || (echo "requirements.txt missing at package root" && exit 1)
          test -f site/app.py || (echo "app.py missing at package root" && exit 1)
          test -f site/startup.sh || (echo "startup.sh missing at package root" && exit 1)
          chmod +x site/startup.sh

      - name: Login to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8E2CAF9FB25845C7864E6A94151BB6D7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_E30113D04FD94867ADF21AA24D9FAD35 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_BDD52ABFD4C64D628A1CD487C4DCB06A }}

      # ⚠️ Run this ONCE (manually) to set config, not on every push
      - name: One-time web app configuration (manual runs only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp config set -g qa-resource-group -n mytestapp --startup-file "bash startup.sh"
            az webapp config appsettings set -g qa-resource-group -n mytestapp --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true
            echo "Waiting 60s for SCM/Kudu to recycle cleanly to avoid deploy conflict..."
            sleep 60

      # Small guard delay even on normal runs
      - name: Guard delay
        run: sleep 10

      - name: Deploy to Azure Web App
        id: deploy-onedeploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: mytestapp
          slot-name: Production
          package: site

      # Simple retry if the first attempt fails (e.g., rare SCM recycle)
      - name: Retry after wait if failed
        if: ${{ failure() }}
        run: |
          echo "First attempt failed. Waiting 60s and retrying..."
          sleep 60

      - name: Deploy to Azure Web App (retry)
        if: ${{ failure() }}
        uses: azure/webapps-deploy@v3
        with:
          app-name: mytestapp
          slot-name: Production
          package: site
